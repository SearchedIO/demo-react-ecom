// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 2WTtS4quVgjDpWxePxJCTZ
// Component: pNa8rk57280k
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_ecommerce_starter.module.css"; // plasmic-import: 2WTtS4quVgjDpWxePxJCTZ/projectcss
import * as sty from "./PlasmicRating.module.css"; // plasmic-import: pNa8rk57280k/css
import EmptyStarIcon from "./icons/PlasmicIcon__EmptyStar"; // plasmic-import: QnXOgS2MU-5C/icon
import FullStarIcon from "./icons/PlasmicIcon__FullStar"; // plasmic-import: -0NIkhbNh1Jv/icon
import HalfStarIcon from "./icons/PlasmicIcon__HalfStar"; // plasmic-import: ZcQw1E-mCijF/icon

export const PlasmicRating__VariantProps = new Array("rating");

export const PlasmicRating__ArgProps = new Array();

function PlasmicRating__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <p.PlasmicIcon
        PlasmicIconType={
          hasVariant(variants, "rating", "threeHalf")
            ? FullStarIcon
            : hasVariant(variants, "rating", "twoHalf")
            ? FullStarIcon
            : hasVariant(variants, "rating", "oneHalf")
            ? FullStarIcon
            : hasVariant(variants, "rating", "half")
            ? HalfStarIcon
            : hasVariant(variants, "rating", "five")
            ? FullStarIcon
            : hasVariant(variants, "rating", "four")
            ? FullStarIcon
            : hasVariant(variants, "rating", "three")
            ? FullStarIcon
            : hasVariant(variants, "rating", "two")
            ? FullStarIcon
            : hasVariant(variants, "rating", "fourHalf")
            ? FullStarIcon
            : hasVariant(variants, "rating", "one")
            ? FullStarIcon
            : EmptyStarIcon
        }
        className={classNames(defaultcss.all, sty.svg___4SsoJ, {
          [sty.svg__rating_five___4SsoJGb6TY]: hasVariant(
            variants,
            "rating",
            "five"
          ),

          [sty.svg__rating_fourHalf___4SsoJzedpu]: hasVariant(
            variants,
            "rating",
            "fourHalf"
          ),

          [sty.svg__rating_four___4SsoJl1SbC]: hasVariant(
            variants,
            "rating",
            "four"
          ),

          [sty.svg__rating_half___4SsoJnMdan]: hasVariant(
            variants,
            "rating",
            "half"
          ),

          [sty.svg__rating_oneHalf___4SsoJig2Ik]: hasVariant(
            variants,
            "rating",
            "oneHalf"
          ),

          [sty.svg__rating_one___4SsoJLp6DD]: hasVariant(
            variants,
            "rating",
            "one"
          ),

          [sty.svg__rating_threeHalf___4SsoJGvKuu]: hasVariant(
            variants,
            "rating",
            "threeHalf"
          ),

          [sty.svg__rating_three___4SsoJn8Ot1]: hasVariant(
            variants,
            "rating",
            "three"
          ),

          [sty.svg__rating_twoHalf___4SsoJox91D]: hasVariant(
            variants,
            "rating",
            "twoHalf"
          ),

          [sty.svg__rating_two___4SsoJ9Kalq]: hasVariant(
            variants,
            "rating",
            "two"
          )
        })}
        role={"img"}
      />

      <p.PlasmicIcon
        PlasmicIconType={
          hasVariant(variants, "rating", "threeHalf")
            ? FullStarIcon
            : hasVariant(variants, "rating", "twoHalf")
            ? FullStarIcon
            : hasVariant(variants, "rating", "oneHalf")
            ? HalfStarIcon
            : hasVariant(variants, "rating", "five")
            ? FullStarIcon
            : hasVariant(variants, "rating", "four")
            ? FullStarIcon
            : hasVariant(variants, "rating", "three")
            ? FullStarIcon
            : hasVariant(variants, "rating", "two")
            ? FullStarIcon
            : hasVariant(variants, "rating", "fourHalf")
            ? FullStarIcon
            : EmptyStarIcon
        }
        className={classNames(defaultcss.all, sty.svg__h6WLt, {
          [sty.svg__rating_five__h6WLtGb6TY]: hasVariant(
            variants,
            "rating",
            "five"
          ),

          [sty.svg__rating_fourHalf__h6WLtzedpu]: hasVariant(
            variants,
            "rating",
            "fourHalf"
          ),

          [sty.svg__rating_four__h6WLtL1SbC]: hasVariant(
            variants,
            "rating",
            "four"
          ),

          [sty.svg__rating_oneHalf__h6WLtIg2Ik]: hasVariant(
            variants,
            "rating",
            "oneHalf"
          ),

          [sty.svg__rating_threeHalf__h6WLtGvKuu]: hasVariant(
            variants,
            "rating",
            "threeHalf"
          ),

          [sty.svg__rating_three__h6WLtn8Ot1]: hasVariant(
            variants,
            "rating",
            "three"
          ),

          [sty.svg__rating_twoHalf__h6WLtOx91D]: hasVariant(
            variants,
            "rating",
            "twoHalf"
          ),

          [sty.svg__rating_two__h6WLt9Kalq]: hasVariant(
            variants,
            "rating",
            "two"
          )
        })}
        role={"img"}
      />

      <p.PlasmicIcon
        PlasmicIconType={
          hasVariant(variants, "rating", "threeHalf")
            ? FullStarIcon
            : hasVariant(variants, "rating", "twoHalf")
            ? HalfStarIcon
            : hasVariant(variants, "rating", "five")
            ? FullStarIcon
            : hasVariant(variants, "rating", "four")
            ? FullStarIcon
            : hasVariant(variants, "rating", "three")
            ? FullStarIcon
            : hasVariant(variants, "rating", "fourHalf")
            ? FullStarIcon
            : EmptyStarIcon
        }
        className={classNames(defaultcss.all, sty.svg__m1Lw1, {
          [sty.svg__rating_five__m1Lw1Gb6TY]: hasVariant(
            variants,
            "rating",
            "five"
          ),

          [sty.svg__rating_fourHalf__m1Lw1Zedpu]: hasVariant(
            variants,
            "rating",
            "fourHalf"
          ),

          [sty.svg__rating_four__m1Lw1L1SbC]: hasVariant(
            variants,
            "rating",
            "four"
          ),

          [sty.svg__rating_threeHalf__m1Lw1GvKuu]: hasVariant(
            variants,
            "rating",
            "threeHalf"
          ),

          [sty.svg__rating_three__m1Lw1N8Ot1]: hasVariant(
            variants,
            "rating",
            "three"
          ),

          [sty.svg__rating_twoHalf__m1Lw1Ox91D]: hasVariant(
            variants,
            "rating",
            "twoHalf"
          )
        })}
        role={"img"}
      />

      <p.PlasmicIcon
        PlasmicIconType={
          hasVariant(variants, "rating", "threeHalf")
            ? HalfStarIcon
            : hasVariant(variants, "rating", "five")
            ? FullStarIcon
            : hasVariant(variants, "rating", "four")
            ? FullStarIcon
            : hasVariant(variants, "rating", "fourHalf")
            ? FullStarIcon
            : EmptyStarIcon
        }
        className={classNames(defaultcss.all, sty.svg__ysaS3, {
          [sty.svg__rating_five__ysaS3Gb6TY]: hasVariant(
            variants,
            "rating",
            "five"
          ),

          [sty.svg__rating_fourHalf__ysaS3Zedpu]: hasVariant(
            variants,
            "rating",
            "fourHalf"
          ),

          [sty.svg__rating_four__ysaS3L1SbC]: hasVariant(
            variants,
            "rating",
            "four"
          ),

          [sty.svg__rating_threeHalf__ysaS3GvKuu]: hasVariant(
            variants,
            "rating",
            "threeHalf"
          )
        })}
        role={"img"}
      />

      <p.PlasmicIcon
        PlasmicIconType={
          hasVariant(variants, "rating", "five")
            ? FullStarIcon
            : hasVariant(variants, "rating", "fourHalf")
            ? HalfStarIcon
            : EmptyStarIcon
        }
        className={classNames(defaultcss.all, sty.svg__bFvon, {
          [sty.svg__rating_five__bFvonGb6TY]: hasVariant(
            variants,
            "rating",
            "five"
          ),

          [sty.svg__rating_fourHalf__bFvoNzedpu]: hasVariant(
            variants,
            "rating",
            "fourHalf"
          )
        })}
        role={"img"}
      />
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicRating__ArgProps,
      internalVariantPropNames: PlasmicRating__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicRating__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicRating";
  } else {
    func.displayName = `PlasmicRating.${nodeName}`;
  }
  return func;
}

export const PlasmicRating = Object.assign(
  // Top-level PlasmicRating renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicRating
    internalVariantProps: PlasmicRating__VariantProps,
    internalArgProps: PlasmicRating__ArgProps
  }
);

export default PlasmicRating;
/* prettier-ignore-end */
